diff --git a/xLights/effects/SingleStrandEffect.cpp b/xLights/effects/SingleStrandEffect.cpp
index 825b3ca6a..4b6419a96 100644
--- a/xLights/effects/SingleStrandEffect.cpp
+++ b/xLights/effects/SingleStrandEffect.cpp
@@ -82,6 +82,7 @@ void SingleStrandEffect::SetDefaultParameters()
     sp->BitmapButton_Color_Mix1VC->SetActive(false);
     sp->BitmapButton_Number_ChasesVC->SetActive(false);
     sp->BitmapButton_Chase_Rotations->SetActive(false);
+    sp->BitmapButton_Chase_OffsetVC->SetActive(false);
     sp->BitmapButton_FX_IntensityVC->SetActive(false);
     sp->BitmapButton_FX_SpeedVC->SetActive(false);
 
@@ -94,6 +95,7 @@ void SingleStrandEffect::SetDefaultParameters()
     SetSliderValue(sp->Slider_Number_Chases, 1);
     SetSliderValue(sp->Slider_Color_Mix1, 10);
     SetSliderValue(sp->Slider_Chase_Rotations, 10);
+    SetSliderValue(sp->Slider_Chase_Offset, 0);
     SetSliderValue(sp->Slider_Skips_BandSize, 1);
     SetSliderValue(sp->Slider_Skips_SkipSize, 1);
     SetSliderValue(sp->Slider_Skips_StartPos, 1);
@@ -161,7 +163,8 @@ void SingleStrandEffect::Render(Effect* effect, const SettingsMap& SettingsMap,
                                 SettingsMap.Get("CHOICE_Chase_Type1", "Left-Right"),
                                 SettingsMap.GetBool("CHECKBOX_Chase_3dFade1", false),
                                 SettingsMap.GetBool("CHECKBOX_Chase_Group_All", false),
-                                GetValueCurveDouble("Chase_Rotations", 1.0, SettingsMap, eff_pos, SINGLESTRAND_ROTATIONS_MIN, SINGLESTRAND_ROTATIONS_MAX, buffer.GetStartTimeMS(), buffer.GetEndTimeMS(), 10));
+                                GetValueCurveDouble("Chase_Rotations", 1.0, SettingsMap, eff_pos, SINGLESTRAND_ROTATIONS_MIN, SINGLESTRAND_ROTATIONS_MAX, buffer.GetStartTimeMS(), buffer.GetEndTimeMS(), SINGLESTRAND_ROTATIONS_DIVISOR),
+                                GetValueCurveDouble("Chase_Offset", 0.0, SettingsMap, eff_pos, SINGLESTRAND_OFFSET_MIN, SINGLESTRAND_OFFSET_MAX, buffer.GetStartTimeMS(), buffer.GetEndTimeMS(), SINGLESTRAND_OFFSET_DIVISOR));
     }
 }
 
@@ -336,6 +339,12 @@ int mapChaseType(const std::string &Chase_Type) {
     if ("To Middle" == Chase_Type) return 6;
     if ("Bounce to Middle" == Chase_Type) return 7;
     if ("Bounce from Middle" == Chase_Type) return 8;
+    if ("Static Left-Right" == Chase_Type) return 9;
+    if ("Static Right-Left" == Chase_Type) return 10;
+    if ("Static Dual" == Chase_Type) return 11;
+    if ("Static From Middle" == Chase_Type) return 12;
+    if ("Static To Middle" == Chase_Type) return 13;
+    if ("Static Double-Ended" == Chase_Type) return 14;
 
     return 0;
 }
@@ -344,7 +353,7 @@ void SingleStrandEffect::RenderSingleStrandChase(RenderBuffer &buffer,
     const std::string & ColorSchemeName, int Number_Chases, int chaseSize,
     const std::string &Chase_Type1,
     bool Chase_Fade3d1, bool Chase_Group_All,
-    float chaseSpeed)
+    float chaseSpeed, float offset)
 {
     int ColorScheme = "Palette" == ColorSchemeName;
 
@@ -368,21 +377,29 @@ void SingleStrandEffect::RenderSingleStrandChase(RenderBuffer &buffer,
     if (buffer.needToInit)
     {
         buffer.needToInit = false;
-        ChaseDirection = (chaseType == 0 || chaseType == 2 || chaseType == 6); // initialize it once at the beginning of this sequence.
+        // initialize it once at the beginning of this sequence.
+        ChaseDirection = (chaseType == 0 || chaseType == 2 || chaseType == 6 ||
+            chaseType == 9 || chaseType == 13 || chaseType == 14);
     }
 
     bool Mirror = false;
     bool AutoReverse = false;
     bool Dual_Chases = false;
+    bool Static = (chaseType >= 9 && chaseType <= 14);
+    bool DoubleEnd = (chaseType == 14);
     switch (chaseType)
     {
     case 6:
+    case 13:
         Mirror = true;
     case 0: // "Normal. L-R"
+    case 9:
         break;
     case 5:
+    case 12:
         Mirror = true;
     case 1: // "Normal. R-L"
+    case 10:
         break;
     case 2: // "Auto reverse l-r"
         AutoReverse = true;
@@ -391,6 +408,7 @@ void SingleStrandEffect::RenderSingleStrandChase(RenderBuffer &buffer,
         AutoReverse = true;
         break;
     case 4: // "Dual Chase"
+    case 11:
         Dual_Chases = true;
         break;
     case 7: // "Bounce to Middle"
@@ -398,6 +416,9 @@ void SingleStrandEffect::RenderSingleStrandChase(RenderBuffer &buffer,
         Dual_Chases = true;
         AutoReverse = true;
         break;
+    case 14:
+        Dual_Chases = true;
+        break;
     default:
         break;
     }
@@ -428,7 +449,8 @@ void SingleStrandEffect::RenderSingleStrandChase(RenderBuffer &buffer,
     }
 
     // This is a 0.0-1.0 value that determine how far along the current chase cycle we are
-    double rtval = (double)(buffer.curPeriod - buffer.curEffStartPer) / (double)(buffer.curEffEndPer - buffer.curEffStartPer);
+    double rtval = Static ? 0 :
+        (double)(buffer.curPeriod - buffer.curEffStartPer) / (double)(buffer.curEffEndPer - buffer.curEffStartPer);
     if (chaseType == 8) {
         // need to start in the middle for Bounce from Middle
         rtval += 0.25 / chaseSpeed;
@@ -437,9 +459,13 @@ void SingleStrandEffect::RenderSingleStrandChase(RenderBuffer &buffer,
         }
     }
     rtval *= chaseSpeed;
+    rtval += (offset / 100);
     while (rtval > 1.0) {
         rtval -= 1.0;
     }
+    while (rtval < 0.0) {
+        rtval += 1.0;
+    }
     if (AutoReverse) {
         rtval *= 2.0;
     }
@@ -449,16 +475,16 @@ void SingleStrandEffect::RenderSingleStrandChase(RenderBuffer &buffer,
     float dx = double(width) / double(Number_Chases);
     if (dx < 1.0) dx = 1.0;
 
-    // All of this math needs to happen with integars because we can only deal with integar number of pixels when we render, so it doesn't do us any good to deal with floats
+    // All of this math needs to happen with integers because we can only deal with integer number of pixels when we render, so it doesn't do us any good to deal with floats
     int startState;
     // If we are wrapping, cap the width the buffer width
     if (Number_Chases > 1) {
-        // The +1 assure that the chases start at index 0 (rather than index -1 or index [width] - 1 in the case of wrapping)
         startState = width * rtval + 1;
-    }
-    // If we aren't wrapping, add the chaseWidth to the total so the chase fully completes
-    else
+    } else if (DoubleEnd) {
+        startState = (width + scaledChaseWidth * 2 - 1) * rtval + 1; // -2) + 1
+    } else
     {
+        // If we aren't wrapping, add the chaseWidth to the total so the chase fully completes
         // The -1 assures divides the time appropriately so an equal amount of time is spent at each index
         // Imagine a 10 pixel wide buffer, and a 2 pixel wide chase. We want to start the chase with 1 pixel visible, and end with 1 pixel visible, so that means there are actually 11 time slots ( [width] + [scaledChaseWidth] - 1 )
         // The only problem is when we hit 1.0 exactly for the time, we'll roll over to the 12th slot, so the if statement fudges the math so the last slot actually gets 1 extra frame
@@ -482,10 +508,10 @@ void SingleStrandEffect::RenderSingleStrandChase(RenderBuffer &buffer,
             x = chase * dx + startState - scaledChaseWidth; // L-R
         }
 
-        draw_chase(buffer, x, Chase_Group_All, ColorScheme, Number_Chases, AutoReverse, width, chaseSize, Chase_Fade3d1, ChaseDirection, Mirror); // Turn pixel on
+        draw_chase(buffer, DoubleEnd ? width - x - 1 * scaledChaseWidth : x, Chase_Group_All, ColorScheme, Number_Chases, AutoReverse, width, chaseSize, Chase_Fade3d1, bool(ChaseDirection) != DoubleEnd, Mirror); // Turn pixel on
         if (Dual_Chases)
         {
-            draw_chase(buffer, x, Chase_Group_All, ColorScheme, Number_Chases, AutoReverse, width, chaseSize, Chase_Fade3d1, !ChaseDirection, Mirror);
+            draw_chase(buffer, DoubleEnd ? x - 1 * scaledChaseWidth : x, Chase_Group_All, ColorScheme, Number_Chases, AutoReverse, width, chaseSize, Chase_Fade3d1, bool(ChaseDirection) == DoubleEnd, Mirror);
         }
     }
 }
diff --git a/xLights/effects/SingleStrandEffect.h b/xLights/effects/SingleStrandEffect.h
index 804dfeab8..59e3bd752 100644
--- a/xLights/effects/SingleStrandEffect.h
+++ b/xLights/effects/SingleStrandEffect.h
@@ -14,6 +14,7 @@
 
 #define SINGLESTRAND_ROTATIONS_MIN 1
 #define SINGLESTRAND_ROTATIONS_MAX 500
+#define SINGLESTRAND_ROTATIONS_DIVISOR 10
 
 #define SINGLESTRAND_CHASES_MIN 1
 #define SINGLESTRAND_CHASES_MAX 20
@@ -21,6 +22,10 @@
 #define SINGLESTRAND_COLOURMIX_MIN 1
 #define SINGLESTRAND_COLOURMIX_MAX 100
 
+#define SINGLESTRAND_OFFSET_MIN -5000
+#define SINGLESTRAND_OFFSET_MAX 5000
+#define SINGLESTRAND_OFFSET_DIVISOR 10
+
 #define SINGLESTRAND_FXINTENSITY_MIN 0
 #define SINGLESTRAND_FXINTENSITY_MAX 255
 
@@ -53,6 +58,8 @@ public:
             return SINGLESTRAND_CHASES_MIN;
         if (name == "E_VALUECURVE_Color_Mix1")
             return SINGLESTRAND_COLOURMIX_MIN;
+        if (name == "E_VALUECURVE_Chase_Offset")
+            return SINGLESTRAND_OFFSET_MIN;
         if (name == "E_VALUECURVE_FX_Intensity")
             return SINGLESTRAND_FXINTENSITY_MIN;
         if (name == "E_VALUECURVE_FX_Speed")
@@ -68,6 +75,8 @@ public:
             return SINGLESTRAND_CHASES_MAX;
         if (name == "E_VALUECURVE_Color_Mix1")
             return SINGLESTRAND_COLOURMIX_MAX;
+        if (name == "E_VALUECURVE_Chase_Offset")
+            return SINGLESTRAND_OFFSET_MAX;
         if (name == "E_VALUECURVE_FX_Intensity")
             return SINGLESTRAND_FXINTENSITY_MAX;
         if (name == "E_VALUECURVE_FX_Speed")
@@ -75,6 +84,15 @@ public:
         return RenderableEffect::GetSettingVCMax(name);
     }
 
+    virtual int GetSettingVCDivisor(const std::string& name) const override
+    {
+        if (name == "E_VALUECURVE_Chase_Rotations")
+            return SINGLESTRAND_ROTATIONS_DIVISOR;
+        if (name == "E_VALUECURVE_Chase_Offset")
+            return SINGLESTRAND_OFFSET_DIVISOR;
+        return RenderableEffect::GetSettingVCDivisor(name);
+    }
+
 protected:
     virtual xlEffectPanel* CreatePanel(wxWindow* parent) override;
 
@@ -83,7 +101,7 @@ private:
                                  const std::string& ColorScheme, int Number_Chases, int chaseSize,
                                  const std::string& Chase_Type1,
                                  bool Chase_3dFade1, bool Chase_Group_All,
-                                 float chaseSpeed);
+                                 float chaseSpeed, float offset);
     void RenderSingleStrandSkips(RenderBuffer& buffer, Effect* eff, int Skips_BandSize,
                                  int Skips_SkipSize, int Skips_StartPos, const std::string& Skips_Direction, int advances);
     void RenderSingleStrandFX(RenderBuffer& buffer, Effect* eff, int intensity, int speed, const std::string& fx, const std::string& palette);
diff --git a/xLights/effects/SingleStrandPanel.cpp b/xLights/effects/SingleStrandPanel.cpp
index 2f1578c6d..a3a158b36 100644
--- a/xLights/effects/SingleStrandPanel.cpp
+++ b/xLights/effects/SingleStrandPanel.cpp
@@ -50,6 +50,11 @@ const long SingleStrandPanel::IDD_SLIDER_Chase_Rotations = wxNewId();
 const long SingleStrandPanel::ID_VALUECURVE_Chase_Rotations = wxNewId();
 const long SingleStrandPanel::ID_TEXTCTRL_Chase_Rotations = wxNewId();
 const long SingleStrandPanel::ID_BITMAPBUTTON_SLIDER_Chase_Rotations = wxNewId();
+const long SingleStrandPanel::ID_STATICTEXT5 = wxNewId();
+const long SingleStrandPanel::IDD_SLIDER_Chase_Offset = wxNewId();
+const long SingleStrandPanel::ID_VALUECURVE_Chase_Offset = wxNewId();
+const long SingleStrandPanel::ID_TEXTCTRL_Chase_Offset = wxNewId();
+const long SingleStrandPanel::ID_BITMAPBUTTON_SLIDER_Chase_Offset = wxNewId();
 const long SingleStrandPanel::ID_STATICTEXT_Chase_Type1 = wxNewId();
 const long SingleStrandPanel::ID_CHOICE_Chase_Type1 = wxNewId();
 const long SingleStrandPanel::ID_BITMAPBUTTON_CHOICE_Chase_Type1 = wxNewId();
@@ -120,6 +125,7 @@ SingleStrandPanel::SingleStrandPanel(wxWindow* parent) : xlEffectPanel(parent)
 	wxFlexGridSizer* FlexGridSizer5;
 	wxFlexGridSizer* FlexGridSizer6;
 	wxFlexGridSizer* FlexGridSizer79;
+	wxFlexGridSizer* FlexGridSizer7;
 	wxFlexGridSizer* FlexGridSizer81;
 	wxFlexGridSizer* FlexGridSizer82;
 	wxFlexGridSizer* FlexGridSizer83;
@@ -153,7 +159,7 @@ SingleStrandPanel::SingleStrandPanel(wxWindow* parent) : xlEffectPanel(parent)
 	BitmapButton_Number_ChasesVC = new BulkEditValueCurveButton(Panel1, ID_VALUECURVE_Number_Chases, GetValueCurveNotSelectedBitmap(), wxDefaultPosition, wxDefaultSize, wxBU_AUTODRAW|wxBORDER_NONE, wxDefaultValidator, _T("ID_VALUECURVE_Number_Chases"));
 	FlexGridSizer1->Add(BitmapButton_Number_ChasesVC, 1, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
 	FlexGridSizer24->Add(FlexGridSizer1, 1, wxALL|wxEXPAND, 0);
-	TextCtrl44 = new BulkEditTextCtrl(Panel1, IDD_TEXTCTRL_Number_Chases, _("1"), wxDefaultPosition, wxDLG_UNIT(Panel1,wxSize(20,-1)), 0, wxDefaultValidator, _T("IDD_TEXTCTRL_Number_Chases"));
+	TextCtrl44 = new BulkEditTextCtrl(Panel1, IDD_TEXTCTRL_Number_Chases, _("1"), wxDefaultPosition, wxDLG_UNIT(Panel1,wxSize(30,-1)), 0, wxDefaultValidator, _T("IDD_TEXTCTRL_Number_Chases"));
 	TextCtrl44->SetMaxLength(3);
 	FlexGridSizer24->Add(TextCtrl44, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 2);
 	BitmapButton_Number_Chases = new xlLockButton(Panel1, ID_BITMAPBUTTON_SLIDER_Number_Chases, wxNullBitmap, wxDefaultPosition, wxSize(14,14), wxBU_AUTODRAW|wxBORDER_NONE, wxDefaultValidator, _T("ID_BITMAPBUTTON_SLIDER_Number_Chases"));
@@ -168,7 +174,7 @@ SingleStrandPanel::SingleStrandPanel(wxWindow* parent) : xlEffectPanel(parent)
 	BitmapButton_Color_Mix1VC = new BulkEditValueCurveButton(Panel1, ID_VALUECURVE_Color_Mix1, GetValueCurveNotSelectedBitmap(), wxDefaultPosition, wxDefaultSize, wxBU_AUTODRAW|wxBORDER_NONE, wxDefaultValidator, _T("ID_VALUECURVE_Color_Mix1"));
 	FlexGridSizer2->Add(BitmapButton_Color_Mix1VC, 1, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
 	FlexGridSizer24->Add(FlexGridSizer2, 1, wxALL|wxEXPAND, 0);
-	TextCtrl45 = new BulkEditTextCtrl(Panel1, IDD_TEXTCTRL_Color_Mix1, _("10"), wxDefaultPosition, wxDLG_UNIT(Panel1,wxSize(20,-1)), 0, wxDefaultValidator, _T("IDD_TEXTCTRL_Color_Mix1"));
+	TextCtrl45 = new BulkEditTextCtrl(Panel1, IDD_TEXTCTRL_Color_Mix1, _("10"), wxDefaultPosition, wxDLG_UNIT(Panel1,wxSize(30,-1)), 0, wxDefaultValidator, _T("IDD_TEXTCTRL_Color_Mix1"));
 	TextCtrl45->SetMaxLength(4);
 	FlexGridSizer24->Add(TextCtrl45, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 2);
 	BitmapButton_Color_Mix1 = new xlLockButton(Panel1, ID_BITMAPBUTTON_SLIDER_Color_Mix1, wxNullBitmap, wxDefaultPosition, wxSize(14,14), wxBU_AUTODRAW|wxBORDER_NONE, wxDefaultValidator, _T("ID_BITMAPBUTTON_SLIDER_Color_Mix1"));
@@ -183,12 +189,27 @@ SingleStrandPanel::SingleStrandPanel(wxWindow* parent) : xlEffectPanel(parent)
 	BitmapButton_Chase_Rotations = new BulkEditValueCurveButton(Panel1, ID_VALUECURVE_Chase_Rotations, GetValueCurveNotSelectedBitmap(), wxDefaultPosition, wxDefaultSize, wxBU_AUTODRAW|wxBORDER_NONE, wxDefaultValidator, _T("ID_VALUECURVE_Chase_Rotations"));
 	FlexGridSizer3->Add(BitmapButton_Chase_Rotations, 1, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
 	FlexGridSizer24->Add(FlexGridSizer3, 1, wxALL|wxEXPAND, 0);
-	TextCtrl43 = new BulkEditTextCtrlF1(Panel1, ID_TEXTCTRL_Chase_Rotations, _("1.0"), wxDefaultPosition, wxDLG_UNIT(Panel1,wxSize(20,-1)), 0, wxDefaultValidator, _T("ID_TEXTCTRL_Chase_Rotations"));
+	TextCtrl43 = new BulkEditTextCtrlF1(Panel1, ID_TEXTCTRL_Chase_Rotations, _("1.0"), wxDefaultPosition, wxDLG_UNIT(Panel1,wxSize(30,-1)), 0, wxDefaultValidator, _T("ID_TEXTCTRL_Chase_Rotations"));
 	TextCtrl43->SetMaxLength(4);
 	FlexGridSizer24->Add(TextCtrl43, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 2);
 	BitmapButton_ChaseRotations = new xlLockButton(Panel1, ID_BITMAPBUTTON_SLIDER_Chase_Rotations, wxNullBitmap, wxDefaultPosition, wxSize(14,14), wxBU_AUTODRAW|wxBORDER_NONE, wxDefaultValidator, _T("ID_BITMAPBUTTON_SLIDER_Chase_Rotations"));
 	BitmapButton_ChaseRotations->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNHIGHLIGHT));
 	FlexGridSizer24->Add(BitmapButton_ChaseRotations, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
+	StaticText5 = new wxStaticText(Panel1, ID_STATICTEXT5, _("Offset"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT5"));
+	FlexGridSizer24->Add(StaticText5, 1, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5);
+	FlexGridSizer7 = new wxFlexGridSizer(0, 2, 0, 0);
+	FlexGridSizer7->AddGrowableCol(0);
+	Slider_Chase_Offset = new BulkEditSliderF1(Panel1, IDD_SLIDER_Chase_Offset, 0, -5000, 5000, wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("IDD_SLIDER_Chase_Offset"));
+	FlexGridSizer7->Add(Slider_Chase_Offset, 1, wxALL|wxEXPAND, 2);
+    BitmapButton_Chase_OffsetVC = new BulkEditValueCurveButton(Panel1, ID_VALUECURVE_Chase_Offset, GetValueCurveNotSelectedBitmap(), wxDefaultPosition, wxDefaultSize, wxBU_AUTODRAW | wxBORDER_NONE, wxDefaultValidator, _T("ID_VALUECURVE_Chase_Offset"));
+	FlexGridSizer7->Add(BitmapButton_Chase_OffsetVC, 1, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
+	FlexGridSizer24->Add(FlexGridSizer7, 1, wxALL|wxEXPAND, 0);
+	TextCtrl_ChaseOffset = new BulkEditTextCtrlF1(Panel1, ID_TEXTCTRL_Chase_Offset, _("0.0"), wxDefaultPosition, wxDLG_UNIT(Panel1,wxSize(30,-1)), 0, wxDefaultValidator, _T("ID_TEXTCTRL_Chase_Offset"));
+	TextCtrl_ChaseOffset->SetMaxLength(6);
+	FlexGridSizer24->Add(TextCtrl_ChaseOffset, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 2);
+	BitmapButton_Chase_Offset = new xlLockButton(Panel1, ID_BITMAPBUTTON_SLIDER_Chase_Offset, wxNullBitmap, wxDefaultPosition, wxSize(14,14), wxBU_AUTODRAW|wxBORDER_NONE, wxDefaultValidator, _T("ID_BITMAPBUTTON_SLIDER_Chase_Offset"));
+	BitmapButton_Chase_Offset->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNHIGHLIGHT));
+	FlexGridSizer24->Add(BitmapButton_Chase_Offset, 1, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
 	StaticText11 = new wxStaticText(Panel1, ID_STATICTEXT_Chase_Type1, _("Chase Types"), wxDefaultPosition, wxDefaultSize, 0, _T("ID_STATICTEXT_Chase_Type1"));
 	FlexGridSizer24->Add(StaticText11, 1, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5);
 	Choice_Chase_Type1 = new BulkEditChoice(Panel1, ID_CHOICE_Chase_Type1, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T("ID_CHOICE_Chase_Type1"));
@@ -201,6 +222,12 @@ SingleStrandPanel::SingleStrandPanel(wxWindow* parent) : xlEffectPanel(parent)
 	Choice_Chase_Type1->Append(_("To Middle"));
 	Choice_Chase_Type1->Append(_("Bounce to Middle"));
 	Choice_Chase_Type1->Append(_("Bounce from Middle"));
+	Choice_Chase_Type1->Append(_("Static Left-Right"));
+	Choice_Chase_Type1->Append(_("Static Right-Left"));
+	Choice_Chase_Type1->Append(_("Static Dual"));
+	Choice_Chase_Type1->Append(_("Static From Middle"));
+	Choice_Chase_Type1->Append(_("Static To Middle"));
+	Choice_Chase_Type1->Append(_("Static Double-Ended"));
 	FlexGridSizer24->Add(Choice_Chase_Type1, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 2);
 	FlexGridSizer24->Add(-1,-1,1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
 	BitmapButton_Chase_Type1 = new xlLockButton(Panel1, ID_BITMAPBUTTON_CHOICE_Chase_Type1, wxNullBitmap, wxDefaultPosition, wxSize(14,14), wxBU_AUTODRAW|wxBORDER_NONE, wxDefaultValidator, _T("ID_BITMAPBUTTON_CHOICE_Chase_Type1"));
@@ -223,6 +250,8 @@ SingleStrandPanel::SingleStrandPanel(wxWindow* parent) : xlEffectPanel(parent)
 	BitmapButton_Chase_Group_All->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNHIGHLIGHT));
 	FlexGridSizer24->Add(BitmapButton_Chase_Group_All, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 2);
 	Panel1->SetSizer(FlexGridSizer24);
+	FlexGridSizer24->Fit(Panel1);
+	FlexGridSizer24->SetSizeHints(Panel1);
 	Panel2 = new wxPanel(SingleStrandEffectType, ID_PANEL21, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T("ID_PANEL21"));
 	FlexGridSizer79 = new wxFlexGridSizer(0, 1, 0, 0);
 	FlexGridSizer79->AddGrowableCol(0);
@@ -292,6 +321,8 @@ SingleStrandPanel::SingleStrandPanel(wxWindow* parent) : xlEffectPanel(parent)
 	FlexGridSizer84->Add(BitmapButton_Skips_Direction, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
 	FlexGridSizer79->Add(FlexGridSizer84, 1, wxALL|wxEXPAND, 2);
 	Panel2->SetSizer(FlexGridSizer79);
+	FlexGridSizer79->Fit(Panel2);
+	FlexGridSizer79->SetSizeHints(Panel2);
 	Panel_FX = new wxPanel(SingleStrandEffectType, ID_PANEL1, wxPoint(104,13), wxDefaultSize, wxTAB_TRAVERSAL, _T("ID_PANEL1"));
 	FlexGridSizer4 = new wxFlexGridSizer(0, 3, 0, 0);
 	FlexGridSizer4->AddGrowableCol(1);
@@ -332,18 +363,20 @@ SingleStrandPanel::SingleStrandPanel(wxWindow* parent) : xlEffectPanel(parent)
 	TextCtrl_FX_Speed->SetMaxLength(3);
 	FlexGridSizer4->Add(TextCtrl_FX_Speed, 1, wxALL|wxEXPAND, 5);
 	Panel_FX->SetSizer(FlexGridSizer4);
+	FlexGridSizer4->Fit(Panel_FX);
+	FlexGridSizer4->SetSizeHints(Panel_FX);
 	SingleStrandEffectType->AddPage(Panel1, _("Chase"), false);
 	SingleStrandEffectType->AddPage(Panel2, _("Skips"), false);
 	SingleStrandEffectType->AddPage(Panel_FX, _("FX"), false);
 	FlexGridSizer89->Add(SingleStrandEffectType, 1, wxALL|wxEXPAND, 5);
 	SetSizer(FlexGridSizer89);
+	FlexGridSizer89->Fit(this);
+	FlexGridSizer89->SetSizeHints(this);
 
 	Connect(ID_BITMAPBUTTON_CHOICE_SingleStrand_Colors,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&SingleStrandPanel::OnLockButtonClick);
 	Connect(ID_BITMAPBUTTON_SLIDER_Number_Chases,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&SingleStrandPanel::OnLockButtonClick);
 	Connect(ID_VALUECURVE_Color_Mix1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&SingleStrandPanel::OnVCButtonClick);
 	Connect(ID_BITMAPBUTTON_SLIDER_Color_Mix1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&SingleStrandPanel::OnLockButtonClick);
-	Connect(ID_VALUECURVE_Chase_Rotations,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&SingleStrandPanel::OnVCButtonClick);
-	Connect(ID_BITMAPBUTTON_SLIDER_Chase_Rotations,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&SingleStrandPanel::OnLockButtonClick);
 	Connect(ID_BITMAPBUTTON_CHOICE_Chase_Type1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&SingleStrandPanel::OnLockButtonClick);
 	Connect(ID_BITMAPBUTTON_CHECKBOX_Chase_3dFade1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&SingleStrandPanel::OnLockButtonClick);
 	Connect(ID_BITMAPBUTTON_CHECKBOX_Chase_Group_All,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&SingleStrandPanel::OnLockButtonClick);
@@ -356,10 +389,16 @@ SingleStrandPanel::SingleStrandPanel(wxWindow* parent) : xlEffectPanel(parent)
 
     Connect(ID_VALUECURVE_Chase_Rotations, wxEVT_COMMAND_BUTTON_CLICKED, (wxObjectEventFunction)&SingleStrandPanel::OnVCButtonClick);
     Connect(ID_VALUECURVE_Number_Chases, wxEVT_COMMAND_BUTTON_CLICKED, (wxObjectEventFunction)&SingleStrandPanel::OnVCButtonClick);
+    Connect(ID_VALUECURVE_Chase_Offset, wxEVT_COMMAND_BUTTON_CLICKED, (wxObjectEventFunction)&SingleStrandPanel::OnVCButtonClick);
     Connect(ID_VALUECURVE_Color_Mix1, wxEVT_COMMAND_BUTTON_CLICKED, (wxObjectEventFunction)&SingleStrandPanel::OnVCButtonClick);
     Connect(ID_VALUECURVE_FX_Intensity, wxEVT_COMMAND_BUTTON_CLICKED, (wxObjectEventFunction)&SingleStrandPanel::OnVCButtonClick);
     Connect(ID_VALUECURVE_FX_Speed, wxEVT_COMMAND_BUTTON_CLICKED, (wxObjectEventFunction)&SingleStrandPanel::OnVCButtonClick);
 
+	Connect(ID_BITMAPBUTTON_SLIDER_Chase_Rotations, wxEVT_COMMAND_BUTTON_CLICKED, (wxObjectEventFunction)&SingleStrandPanel::OnLockButtonClick);
+    Connect(ID_BITMAPBUTTON_SLIDER_Chase_Offset, wxEVT_COMMAND_BUTTON_CLICKED, (wxObjectEventFunction)&SingleStrandPanel::OnLockButtonClick);
+
+    Connect(ID_CHOICE_Chase_Type1, wxEVT_COMMAND_CHOICE_SELECTED, (wxObjectEventFunction)&SingleStrandPanel::OnChoice_Chase_Type_Select);
+
     Connect(wxID_ANY, EVT_VC_CHANGED, (wxObjectEventFunction)&SingleStrandPanel::OnVCChanged, 0, this);
     Connect(wxID_ANY, EVT_VALIDATEWINDOW, (wxObjectEventFunction)&SingleStrandPanel::OnValidateWindow, 0, this);
 
@@ -372,7 +411,9 @@ SingleStrandPanel::SingleStrandPanel(wxWindow* parent) : xlEffectPanel(parent)
     Slider_FX_Speed->SetMax(SINGLESTRAND_FXSPEED_MAX);
 
     BitmapButton_Chase_Rotations->GetValue()->SetLimits(SINGLESTRAND_ROTATIONS_MIN, SINGLESTRAND_ROTATIONS_MAX);
-    BitmapButton_Chase_Rotations->GetValue()->SetDivisor(10);
+    BitmapButton_Chase_Rotations->GetValue()->SetDivisor(SINGLESTRAND_ROTATIONS_DIVISOR);
+    BitmapButton_Chase_OffsetVC->GetValue()->SetLimits(SINGLESTRAND_OFFSET_MIN, SINGLESTRAND_OFFSET_MAX);
+    BitmapButton_Chase_OffsetVC->GetValue()->SetDivisor(SINGLESTRAND_OFFSET_DIVISOR);
     BitmapButton_Number_ChasesVC->GetValue()->SetLimits(SINGLESTRAND_CHASES_MIN, SINGLESTRAND_CHASES_MAX);
     BitmapButton_Color_Mix1VC->GetValue()->SetLimits(SINGLESTRAND_COLOURMIX_MIN, SINGLESTRAND_COLOURMIX_MAX);
     BitmapButton_FX_IntensityVC->GetValue()->SetLimits(SINGLESTRAND_FXINTENSITY_MIN, SINGLESTRAND_FXINTENSITY_MAX);
@@ -414,4 +455,16 @@ SingleStrandPanel::~SingleStrandPanel()
 
 void SingleStrandPanel::ValidateWindow()
 {
+    if (Choice_Chase_Type1->GetStringSelection().StartsWith("Static")) {
+        Slider_Chase_Rotations->Disable();
+        BitmapButton_Chase_Rotations->Disable();
+    } else {
+        Slider_Chase_Rotations->Enable();
+        BitmapButton_Chase_Rotations->Enable();
+    }
+}
+
+void SingleStrandPanel::OnChoice_Chase_Type_Select(wxCommandEvent& event)
+{
+    ValidateWindow();
 }
diff --git a/xLights/effects/SingleStrandPanel.h b/xLights/effects/SingleStrandPanel.h
index e96022d66..9dc7b1c9e 100644
--- a/xLights/effects/SingleStrandPanel.h
+++ b/xLights/effects/SingleStrandPanel.h
@@ -50,7 +50,10 @@ class SingleStrandPanel: public xlEffectPanel
 		BulkEditSlider* Slider_Skips_BandSize;
 		BulkEditSlider* Slider_Skips_SkipSize;
 		BulkEditSlider* Slider_Skips_StartPos;
+		BulkEditSliderF1* Slider_Chase_Offset;
 		BulkEditSliderF1* Slider_Chase_Rotations;
+		BulkEditTextCtrlF1* TextCtrl_ChaseOffset;
+		BulkEditValueCurveButton* BitmapButton_Chase_OffsetVC;
 		BulkEditValueCurveButton* BitmapButton_Chase_Rotations;
 		BulkEditValueCurveButton* BitmapButton_Color_Mix1VC;
 		BulkEditValueCurveButton* BitmapButton_FX_IntensityVC;
@@ -71,12 +74,14 @@ class SingleStrandPanel: public xlEffectPanel
 		wxStaticText* StaticText2;
 		wxStaticText* StaticText3;
 		wxStaticText* StaticText4;
+		wxStaticText* StaticText5;
 		wxStaticText* StaticText60;
 		wxStaticText* StaticText61;
 		wxStaticText* StaticText9;
 		xlLockButton* BitmapButton_ChaseRotations;
 		xlLockButton* BitmapButton_Chase_3dFade1;
 		xlLockButton* BitmapButton_Chase_Group_All;
+		xlLockButton* BitmapButton_Chase_Offset;
 		xlLockButton* BitmapButton_Chase_Type1;
 		xlLockButton* BitmapButton_Color_Mix1;
 		xlLockButton* BitmapButton_Number_Chases;
@@ -109,6 +114,11 @@ class SingleStrandPanel: public xlEffectPanel
 		static const long ID_VALUECURVE_Chase_Rotations;
 		static const long ID_TEXTCTRL_Chase_Rotations;
 		static const long ID_BITMAPBUTTON_SLIDER_Chase_Rotations;
+		static const long ID_STATICTEXT5;
+		static const long IDD_SLIDER_Chase_Offset;
+		static const long ID_VALUECURVE_Chase_Offset;
+		static const long ID_TEXTCTRL_Chase_Offset;
+		static const long ID_BITMAPBUTTON_SLIDER_Chase_Offset;
 		static const long ID_STATICTEXT_Chase_Type1;
 		static const long ID_CHOICE_Chase_Type1;
 		static const long ID_BITMAPBUTTON_CHOICE_Chase_Type1;
@@ -158,5 +168,7 @@ class SingleStrandPanel: public xlEffectPanel
 		//(*Handlers(SingleStrandPanel)
 		//*)
 
+        void OnChoice_Chase_Type_Select(wxCommandEvent& event);
+
 		DECLARE_EVENT_TABLE()
 };
diff --git a/xLights/wxsmith/SingleStrandPanel.wxs b/xLights/wxsmith/SingleStrandPanel.wxs
index 3d576d71f..91c7d4f68 100755
--- a/xLights/wxsmith/SingleStrandPanel.wxs
+++ b/xLights/wxsmith/SingleStrandPanel.wxs
@@ -88,7 +88,7 @@
 									<object class="wxTextCtrl" name="IDD_TEXTCTRL_Number_Chases" subclass="BulkEditTextCtrl" variable="TextCtrl44" member="no">
 										<value>1</value>
 										<maxlength>3</maxlength>
-										<size>20,-1d</size>
+										<size>30,-1d</size>
 									</object>
 									<flag>wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL</flag>
 									<border>2</border>
@@ -143,7 +143,7 @@
 									<object class="wxTextCtrl" name="IDD_TEXTCTRL_Color_Mix1" subclass="BulkEditTextCtrl" variable="TextCtrl45" member="no">
 										<value>10</value>
 										<maxlength>4</maxlength>
-										<size>20,-1d</size>
+										<size>30,-1d</size>
 									</object>
 									<flag>wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL</flag>
 									<border>2</border>
@@ -186,7 +186,6 @@
 											<object class="wxBitmapButton" name="ID_VALUECURVE_Chase_Rotations" subclass="BulkEditValueCurveButton" variable="BitmapButton_Chase_Rotations" member="yes">
 												<bitmap code="GetValueCurveNotSelectedBitmap()" />
 												<style>wxBU_AUTODRAW|wxBORDER_NONE</style>
-												<handler function="OnVCButtonClick" entry="EVT_BUTTON" />
 											</object>
 											<flag>wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL</flag>
 											<option>1</option>
@@ -199,7 +198,7 @@
 									<object class="wxTextCtrl" name="ID_TEXTCTRL_Chase_Rotations" subclass="BulkEditTextCtrlF1" variable="TextCtrl43" member="no">
 										<value>1.0</value>
 										<maxlength>4</maxlength>
-										<size>20,-1d</size>
+										<size>30,-1d</size>
 									</object>
 									<flag>wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL</flag>
 									<border>2</border>
@@ -210,12 +209,64 @@
 										<size>14,14</size>
 										<bg>wxSYS_COLOUR_BTNHIGHLIGHT</bg>
 										<style>wxBU_AUTODRAW|wxBORDER_NONE</style>
-										<handler function="OnLockButtonClick" entry="EVT_BUTTON" />
 									</object>
 									<flag>wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL</flag>
 									<border>1</border>
 									<option>1</option>
 								</object>
+								<object class="sizeritem">
+									<object class="wxStaticText" name="ID_STATICTEXT5" variable="StaticText5" member="yes">
+										<label>Offset</label>
+									</object>
+									<flag>wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL</flag>
+									<border>5</border>
+									<option>1</option>
+								</object>
+								<object class="sizeritem">
+									<object class="wxFlexGridSizer" variable="FlexGridSizer7" member="no">
+										<cols>2</cols>
+										<growablecols>0</growablecols>
+										<object class="sizeritem">
+											<object class="wxSlider" name="IDD_SLIDER_Chase_Offset" subclass="BulkEditSliderF1" variable="Slider_Chase_Offset" member="yes">
+												<min>-5000</min>
+												<max>5000</max>
+											</object>
+											<flag>wxALL|wxEXPAND</flag>
+											<border>2</border>
+											<option>1</option>
+										</object>
+										<object class="sizeritem">
+											<object class="wxBitmapButton" name="ID_VALUECURVE_Chase_Offset" subclass="BulkEditValueCurveButton" variable="BitmapButton_Chase_OffsetVC" member="yes">
+												<bitmap code="GetValueCurveNotSelectedBitmap()" />
+												<style>wxBU_AUTODRAW|wxBORDER_NONE</style>
+											</object>
+											<flag>wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL</flag>
+											<option>1</option>
+										</object>
+									</object>
+									<flag>wxALL|wxEXPAND</flag>
+									<option>1</option>
+								</object>
+								<object class="sizeritem">
+									<object class="wxTextCtrl" name="ID_TEXTCTRL_Chase_Offset" subclass="BulkEditTextCtrlF1" variable="TextCtrl_ChaseOffset" member="yes">
+										<value>0.0</value>
+										<maxlength>6</maxlength>
+										<size>30,-1d</size>
+									</object>
+									<flag>wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL</flag>
+									<border>2</border>
+									<option>1</option>
+								</object>
+								<object class="sizeritem">
+									<object class="wxBitmapButton" name="ID_BITMAPBUTTON_SLIDER_Chase_Offset" subclass="xlLockButton" variable="BitmapButton_Chase_Offset" member="yes">
+										<size>14,14</size>
+										<bg>wxSYS_COLOUR_BTNHIGHLIGHT</bg>
+										<style>wxBU_AUTODRAW|wxBORDER_NONE</style>
+									</object>
+									<flag>wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL</flag>
+									<border>1</border>
+									<option>1</option>
+								</object>
 								<object class="sizeritem">
 									<object class="wxStaticText" name="ID_STATICTEXT_Chase_Type1" variable="StaticText11" member="yes">
 										<label>Chase Types</label>
@@ -236,6 +287,12 @@
 											<item>To Middle</item>
 											<item>Bounce to Middle</item>
 											<item>Bounce from Middle</item>
+											<item>Static Left-Right</item>
+											<item>Static Right-Left</item>
+											<item>Static Dual</item>
+											<item>Static From Middle</item>
+											<item>Static To Middle</item>
+											<item>Static Double-Ended</item>
 										</content>
 										<selection>0</selection>
 									</object>
